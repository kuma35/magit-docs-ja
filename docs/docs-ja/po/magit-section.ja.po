# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: magit-docs-ja 0.0\n"
"POT-Creation-Date: 2023-09-08 20:19+0900\n"
"PO-Revision-Date: 2022-08-25 02:33+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: sed-out/magit.texi:8 sed-out/magit-section.texi:8
msgid "@documentencoding UTF-8 @documentlanguage en"
msgstr "@documentencoding UTF-8 @documentlanguage en"

#. type: quotation
#: sed-out/magit.texi:12 sed-out/magit-section.texi:12
msgid "Copyright (C) 2015-2022 Jonas Bernoulli <jonas@@bernoul.li>"
msgstr "Copyright (C) 2015-2022 Jonas Bernoulli <jonas@@bernoul.li>"

#. type: quotation
#: sed-out/magit.texi:17 sed-out/magit-section.texi:17
msgid ""
"You can redistribute this document and/or modify it under the terms of the "
"GNU General Public License as published by the Free Software Foundation, "
"either version 3 of the License, or (at your option) any later version."
msgstr ""
"You can redistribute this document and/or modify it under the terms of the "
"GNU General Public License as published by the Free Software Foundation, "
"either version 3 of the License, or (at your option) any later version."

#. type: quotation
#: sed-out/magit.texi:22 sed-out/magit-section.texi:22
msgid ""
"This document is distributed in the hope that it will be useful, but WITHOUT "
"ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or "
"FITNESS FOR A PARTICULAR PURPOSE@.  See the GNU General Public License for "
"more details."
msgstr ""
"This document is distributed in the hope that it will be useful, but WITHOUT "
"ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or "
"FITNESS FOR A PARTICULAR PURPOSE@.  See the GNU General Public License for "
"more details."

#. type: dircategory
#: sed-out/magit.texi:26 sed-out/magit-section.texi:26
#, no-wrap
msgid "Emacs"
msgstr "Magit文書翻訳"

#. type: subtitle
#: sed-out/magit.texi:34 sed-out/magit-section.texi:34
#, no-wrap
msgid "for version 3.3.0-git"
msgstr "for version 3.3.0-git"

#. type: author
#: sed-out/magit.texi:35 sed-out/magit-section.texi:35
#, no-wrap
msgid "Jonas Bernoulli"
msgstr "Jonas Bernoulli"

#. type: node
#: sed-out/magit.texi:44 sed-out/magit-section.texi:44
#, no-wrap
msgid "Top"
msgstr "Top"

#. type: chapter
#: sed-out/magit.texi:77 sed-out/magit.texi:343 sed-out/magit.texi:344
#: sed-out/magit-section.texi:67 sed-out/magit-section.texi:69
#: sed-out/magit-section.texi:70
#, no-wrap
msgid "Introduction"
msgstr "Introduction"

#. type: chapter
#: sed-out/magit.texi:300 sed-out/magit.texi:10243 sed-out/magit.texi:10245
#: sed-out/magit.texi:10246 sed-out/magit-section.texi:67
#: sed-out/magit-section.texi:85 sed-out/magit-section.texi:86
#, no-wrap
msgid "Creating Sections"
msgstr "Creating Sections"

#. type: defmac
#: sed-out/magit.texi:10282 sed-out/magit-section.texi:130
msgid ""
"If it turns out inside BODY that the section is empty, then @code{magit-"
"cancel-section} can be used to abort and remove all traces of the partially "
"inserted section.  This can happen when creating a section by washing Git's "
"output and Git didn't actually output anything this time around."
msgstr ""
"セクションが空であることがBODY内で判明した場合は、@code{magit-cancel-section}"
"を使用して、部分的に挿入されたセクションのすべてのトレースを中止して削除でき"
"ます。これは、Gitの出力を洗浄(wash)してセクションを作成し、Gitが今回は実際に"
"は何も出力しなかった場合に発生する可能性があります。"

#. type: defun
#: sed-out/magit.texi:10284 sed-out/magit-section.texi:132
#, no-wrap
msgid "magit-insert-heading &rest args"
msgstr "magit-insert-heading &rest args"

#. type: defun
#: sed-out/magit.texi:10286 sed-out/magit-section.texi:134
msgid "Insert the heading for the section currently being inserted."
msgstr "現在挿入されているセクションの見出しを挿入します。"

#. type: defun
#: sed-out/magit.texi:10288 sed-out/magit-section.texi:136
msgid "This function should only be used inside @code{magit-insert-section}."
msgstr ""
"この関数は、@code{magit-insert-section}内でのみ使用する必要があります。"

#. type: defun
#: sed-out/magit.texi:10293 sed-out/magit-section.texi:141
msgid ""
"When called without any arguments, then just set the @code{content} slot of "
"the object representing the section being inserted to a marker at "
"@code{point}.  The section should only contain a single line when this "
"function is used like this."
msgstr ""
"引数なしで呼び出された場合は、挿入されるセクションを表すオブジェクトの"
"@code{content}スロットを@code{point}のマーカーに設定するだけです。この関数を"
"このように使用する場合、セクションには1行のみを含める必要があります。"

#. type: defun
#: sed-out/magit.texi:10311 sed-out/magit-section.texi:168
#, no-wrap
msgid "magit-cancel-section"
msgstr "magit-cancel-section"

#. type: defun
#: sed-out/magit.texi:10325 sed-out/magit-section.texi:182
#, no-wrap
msgid "magit-current-section"
msgstr "magit-current-section"

#. type: defun
#: sed-out/magit.texi:10373 sed-out/magit-section.texi:195
#, no-wrap
msgid "magit-section-ident section"
msgstr "magit-section-ident section"

#. type: defun
#: sed-out/magit.texi:10378 sed-out/magit-section.texi:212
#, no-wrap
msgid "magit-get-section ident &optional root"
msgstr "magit-get-section ident &optional root"

#. type: defun
#: sed-out/magit.texi:10390 sed-out/magit-section.texi:264
msgid "CONDITION can take the following forms:"
msgstr "CONDITIONは、以下の形式をとることができます:"

#. type: defun
#: sed-out/magit.texi:10425 sed-out/magit-section.texi:290
msgid ""
"Each CLASS should be a class symbol, identifying a class that derives from "
"@code{magit-section}.  For backward compatibility CLASS can also be a \"type "
"symbol\".  A section matches such a symbol if the value of its @code{type} "
"slot is @code{eq}.  If a type symbol has an entry in @code{magit--section-"
"type-alist}, then a section also matches that type if its class is a "
"subclass of the class that corresponds to the type as per that alist."
msgstr ""
"各CLASSは、@code{magit-section}から派生したクラスを識別するクラスシンボルであ"
"る必要があります。下位互換性のために、CLASSは「タイプシンボル」にすることもで"
"きます。@code{type}スロットの値が@code{eq}の場合、セクションはそのようなシン"
"ボルに一致します。タイプシンボルの@code{magit--section-type-alist}にエントリ"
"がある場合、そのクラスがそのalistのタイプに対応するクラスのサブクラスであれ"
"ば、セクションもそのタイプに一致します。"

#. type: defun
#: sed-out/magit.texi:10429 sed-out/magit-section.texi:294
msgid ""
"Note that it is not necessary to specify the complete section lineage as "
"printed by @code{magit-describe-section-briefly}, unless of course you want "
"to be that precise."
msgstr ""
"注意: もちろん、正確にしたい場合を除いて、@code{magit-describe-section-"
"briefly}によって出力される完全なセクション系統を指定する必要はないことに注意"
"してください。"

#. type: defun
#: sed-out/magit.texi:10431 sed-out/magit-section.texi:296
#, no-wrap
msgid "magit-section-value-if condition &optional section"
msgstr "magit-section-value-if condition &optional section"

#. type: defun
#: sed-out/magit.texi:10433 sed-out/magit-section.texi:298
msgid "If the section at point matches CONDITION, then return its value."
msgstr "ポイントのセクションがCONDITIONと一致する場合は、その値を返します。"

#. type: defun
#: sed-out/magit.texi:10438 sed-out/magit-section.texi:303
msgid ""
"If optional SECTION is non-nil then test whether that matches instead.  If "
"there is no section at point and SECTION is nil, then return nil.  If the "
"section does not match, then return nil."
msgstr ""
"オプションのSECTIONがnil以外の場合は、代わりにそれが一致するかどうかをテスト"
"します。ポイントにセクションがなく、SECTIONがnilの場合は、nilを返します。 セ"
"クションが一致しない場合は、nilを返します。"

#. type: defun
#: sed-out/magit.texi:10440 sed-out/magit-section.texi:305
msgid "See @code{magit-section-match} for the forms CONDITION can take."
msgstr ""
"CONDITIONが取ることができる形式については、@code{magit-section-match}を参照し"
"てください。"

#. type: defmac
#: sed-out/magit.texi:10442 sed-out/magit-section.texi:307
#, no-wrap
msgid "magit-section-case &rest clauses"
msgstr "magit-section-case &rest clauses"

#. type: defmac
#: sed-out/magit.texi:10444 sed-out/magit-section.texi:309
msgid "Choose among clauses on the type of the section at point."
msgstr "ポイントのセクションのタイプに関する条項(clauses)から選択します。"

#. type: top
#: sed-out/magit-section.texi:4 sed-out/magit-section.texi:33
#: sed-out/magit-section.texi:45
#, no-wrap
msgid "Magit-Section Developer Manual"
msgstr "Magit-Section Developer Manual"

#. type: menuentry
#: sed-out/magit-section.texi:29
msgid "Magit-Section: (magit-section)"
msgstr "Magit-Section(ja): (magit-section.ja)"

#. type: menuentry
#: sed-out/magit-section.texi:29
msgid "Use Magit sections in your own packages."
msgstr "あなた独自のパッケージでMagit sectionを使用します。"

#. type: Plain text
#: sed-out/magit-section.texi:51 sed-out/magit-section.texi:76
msgid ""
"This package implements the main user interface of Magit — the collapsible "
"sections that make up its buffers.  This package used to be distributed as "
"part of Magit but how it can also be used by other packages that have "
"nothing to do with Magit or Git."
msgstr ""
"このパッケージは、Magitのメインユーザーインターフェイス(バッファを構成する折"
"りたたみ可能なセクション)を実装します。このパッケージは、以前はMagitの一部と"
"して配布されていました。しかし今やMagitやGitとは関係のない他のパッケージでも"
"どのようにすれば使用できるかを示しています。"

#. type: Plain text
#: sed-out/magit-section.texi:55 sed-out/magit-section.texi:80
msgid ""
"To learn more about the section abstraction and available commands and user "
"options see @ref{Sections,,,magit,}.  This manual documents how you can use "
"sections in your own packages."
msgstr ""
"セクションの抽象化と使用可能なコマンドおよびユーザーオプションの詳細について"
"は→@ref{Sections,,,magit,} このマニュアルでは、あなた独自のパッケージでセク"
"ションを使用する方法について説明します。"

#. type: ifnottex
#: sed-out/magit-section.texi:58
msgid "This manual is for Magit-Section version 3.3.0-git."
msgstr ""
"このマニュアルは、Magit-Sectionバージョン 3.3.0-git を対象としています。"

#. type: chapter
#: sed-out/magit-section.texi:67 sed-out/magit-section.texi:179
#: sed-out/magit-section.texi:180
#, no-wrap
msgid "Core Functions"
msgstr "Core Functions"

#. type: chapter
#: sed-out/magit-section.texi:67 sed-out/magit-section.texi:253
#: sed-out/magit-section.texi:254
#, no-wrap
msgid "Matching Functions"
msgstr "Matching Functions"

#. type: Plain text
#: sed-out/magit-section.texi:84
msgid ""
"When the documentation leaves something unaddressed, then please consider "
"that Magit uses this library extensively and search its source for suitable "
"examples before asking me for help.  Thanks!"
msgstr ""
"ドキュメントに対処されていないものが残っている場合は、Magitがこのライブラリを"
"広範囲に使用していることを鑑み、助けを求める前にまずはMagit関係の方で適切な例"
"を検索してください。宜しくお願いします。"

#. type: defmac
#: sed-out/magit-section.texi:88
#, no-wrap
msgid "magit-insert-section [name] (type &optional value hide) &rest body"
msgstr "magit-insert-section [name] (type &optional value hide) &rest body"

#. type: defmac
#: sed-out/magit-section.texi:95
msgid ""
"Create a section object of type CLASS, storing VALUE in its @code{value} "
"slot, and insert the section at point.  CLASS is a subclass of `magit-"
"section' or has the form @code{(eval FORM)}, in which case FORM is evaluated "
"at runtime and should return a subclass.  In other places a sections class "
"is oftern referred to as its \"type\"."
msgstr ""
"タイプCLASSのセクションオブジェクトを作成し、その@code{value}スロットにVALUE"
"を格納し、ポイントにセクションを挿入します。 CLASSは`magit-section'のサブクラ"
"スであるか、@code{(eval FORM)}の形式です。この場合、FORMは実行時に評価され、"
"サブクラスを返す必要があります。 他の場所では、セクションクラスはしばしばその"
"「タイプ」と呼ばれます。"

#. type: defmac
#: sed-out/magit-section.texi:101
msgid ""
"Many commands behave differently depending on the class of the current "
"section and sections of a certain class can have their own keymap, which is "
"specified using the `keymap' class slot.  The value of that slot should be a "
"variable whose value is a keymap."
msgstr ""
"多くのコマンドは、現在のセクションのクラスに応じて動作が異なり、特定のクラス"
"のセクションは、`keymap'クラススロットを使用して指定される独自のキーマップを"
"持つことができます。そのスロットの値は、値がキーマップである変数である必要が"
"あります。"

#. type: defmac
#: sed-out/magit-section.texi:106
msgid ""
"For historic reasons Magit and Forge in most cases use symbols as CLASS that "
"don't actually identify a class and that lack the appropriate package "
"prefix.  This works due to some undocumented kludges, which are not "
"available to other packages."
msgstr ""
"歴史的な理由から、MagitとForgeはほとんどの場合、実際にはクラスを識別せず、適"
"切なパッケージプレフィックスがないシンボルをCLASSとして使用します。これは、他"
"のパッケージでは利用できない、文書化されていないその場しのぎ(kludge)が原因で"
"機能します。"

#. type: defmac
#: sed-out/magit-section.texi:114
msgid ""
"When optional HIDE is non-nil collapse the section body by default, i.e. "
"when first creating the section, but not when refreshing the buffer.  Else "
"expand it by default.  This can be overwritten using @code{magit-section-set-"
"visibility-hook}.  When a section is recreated during a refresh, then the "
"visibility of predecessor is inherited and HIDE is ignored (but the hook is "
"still honored)."
msgstr ""
"オプションのHIDEがnil以外の場合、デフォルトでセクション本体を折りたたみます。"
"つまり、最初にセクションを作成するときですが、バッファを更新するときは折りた"
"たみません。 それ以外の場合は、デフォルトで展開します。 これは、@code{magit-"
"section-set-visibility-hook}を使用して上書きできます。更新中にセクションが再"
"作成されると、先行の可視性が継承され、HIDEは無視されます（ただし、フックは引"
"き続き尊重されます）。"

#. type: defmac
#: sed-out/magit-section.texi:119
msgid ""
"BODY is any number of forms that actually insert the section's heading and "
"body.  Optional NAME, if specified, has to be a symbol, which is then bound "
"to the object of the section being inserted."
msgstr ""
"BODYは、セクションの見出しと本文を実際に挿入する任意の数のフォーム(form)で"
"す。オプションのNAMEを指定する場合は、シンボルにする必要があります。シンボル"
"は、挿入されるセクションのオブジェクトに結び付けられます。"

#. type: defmac
#: sed-out/magit-section.texi:124
msgid ""
"Before BODY is evaluated the @code{start} of the section object is set to "
"the value of `point' and after BODY was evaluated its @code{end} is set to "
"the new value of @code{point}; BODY is responsible for moving @code{point} "
"forward."
msgstr ""
"BODYが評価される前に、セクションオブジェクトの@code{start}が`point'の値に設定"
"され、BODYが評価された後、その@code{end}が@code{point}の新しい値に設定されま"
"す。BODYは、@code{point}を前進させる責任があります。"

#. type: defun
#: sed-out/magit-section.texi:149
msgid ""
"When called with arguments ARGS, which have to be strings, or nil, then "
"insert those strings at point.  The section should not contain any text "
"before this happens and afterwards it should again only contain a single "
"line.  If the @code{face} property is set anywhere inside any of these "
"strings, then insert all of them unchanged.  Otherwise use the `magit-"
"section-heading' face for all inserted text."
msgstr ""
"文字列またはnilである必要がある引数ARGSを指定して呼び出された場合は、それらの"
"文字列をポイントに挿入します。これが発生する前はセクションにテキストを含めな"
"いでください。その後、セクションには1行だけを含める必要があります。"
"@code{face}プロパティがこれらの文字列のいずれかの内部のどこかに設定されている"
"場合は、それらすべてを変更せずに挿入します。それ以外の場合は、挿入されたすべ"
"てのテキストに `magit-section-heading' faceを使用します。"

#. type: defun
#: sed-out/magit-section.texi:159
msgid ""
"The @code{content} property of the section object is the end of the heading "
"(which lasts from @code{start} to @code{content}) and the beginning of the "
"the body (which lasts from @code{content} to @code{end}).  If the value of "
"@code{content} is nil, then the section has no heading and its body cannot "
"be collapsed.  If a section does have a heading, then its height must be "
"exactly one line, including a trailing newline character.  This isn't "
"enforced, you are responsible for getting it right.  The only exception is "
"that this function does insert a newline character if necessary."
msgstr ""
"セクションオブジェクトの@code{content}プロパティは、見出しの終わり"
"(@code{start}から@code{content}まで続く)と本文の始まり(@code{content}から"
"@code{end}まで続く)です。@code{content}の値がnilの場合、セクションには見出し"
"がなく、本文を折りたたむことはできません。セクションに見出しがある場合、その"
"高さは、末尾の改行文字を含めて、正確に1行である必要があります。これは強制され"
"ません、あなたはそれを正しくする責任があります。唯一の例外は、この関数が必要"
"に応じて改行文字を挿入することです。"

#. type: defmac
#: sed-out/magit-section.texi:161
#, no-wrap
msgid "magit-insert-section-body &rest body"
msgstr "magit-insert-section-body &rest body"

#. type: defmac
#: sed-out/magit-section.texi:166
msgid ""
"Use BODY to insert the section body, once the section is expanded.  If the "
"section is expanded when it is created, then this is like @code{progn}.  "
"Otherwise BODY isn't evaluated until the section is explicitly expanded."
msgstr ""
"セクションが展開されたら、BODYを使用してセクション本体を挿入します。セクショ"
"ンの作成時にセクションが展開されている場合、これは@code{progn}のようになりま"
"す。それ以外の場合、セクションが明示的に展開されるまで、BODYは評価されませ"
"ん。"

#. type: defun
#: sed-out/magit-section.texi:171
msgid ""
"Cancel inserting the section that is currently being inserted.  Remove all "
"traces of that section."
msgstr ""
"現在挿入されているセクションの挿入をキャンセルします。そのセクションのすべて"
"の痕跡を削除します。"

#. type: defun
#: sed-out/magit-section.texi:173
#, no-wrap
msgid "magit-wash-sequence function"
msgstr "magit-wash-sequence function"

#. type: defun
#: sed-out/magit-section.texi:177
msgid ""
"Repeatedly call FUNCTION until it returns @code{nil} or the end of the "
"buffer is reached.  FUNCTION has to move point forward or return @code{nil}."
msgstr ""
"@code{nil}が返されるか、バッファの終わりに達するまで、FUNCTIONを繰り返し呼び"
"出します。FUNCTIONは、ポイントを前方に移動するか、@code{nil}を返す必要があり"
"ます。"

#. type: defun
#: sed-out/magit-section.texi:187
msgid ""
"Return the section at point or where the context menu was invoked.  When "
"using the context menu, return the section that the user clicked on, "
"provided the current buffer is the buffer in which the click occurred.  "
"Otherwise return the section at point."
msgstr ""
"ポイントまたはコンテキストメニューが呼び出された場所のセクションを返します。 "
"コンテキストメニューを使用する場合、クリックが発生したバッファーが現在のバッ"
"ファーである場合、ユーザーがクリックしたセクションを返します。 それ以外の場合"
"は、ポイントのセクションを返します。"

#. type: item
#: sed-out/magit-section.texi:190
#, no-wrap
msgid "Function magit-section-at &optional position"
msgstr "Function magit-section-at &optional position"

#. type: table
#: sed-out/magit-section.texi:193
msgid ""
"Return the section at POSITION, defaulting to point.  Default to point even "
"when the context menu is used."
msgstr ""
"POSITION のセクションを返します。デフォルトはポイントです。 コンテキストメ"
"ニューが使用されている場合でも、デフォルトでポイントします。"

#. type: defun
#: sed-out/magit-section.texi:198
msgid ""
"Return an unique identifier for SECTION@. The return value has the form "
"@code{((TYPE . VALUE)...)}."
msgstr ""
"SECTION@@の一意(unique)の識別子(identifier)を返します。戻り値の形式は"
"@code{((TYPE . VALUE)...)}です。"

#. type: defun
#: sed-out/magit-section.texi:200
#, no-wrap
msgid "magit-section-ident-value value"
msgstr "magit-section-ident-value value"

#. type: defun
#: sed-out/magit-section.texi:202
msgid "Return a constant representation of VALUE@."
msgstr "VALUE@@の定数表現(constant representation)を返します。"

#. type: defun
#: sed-out/magit-section.texi:210
msgid ""
"VALUE is the value of a @code{magit-section} object.  If that is an object "
"itself, then that is not suitable to be used to identify the section because "
"two objects may represent the same thing but not be equal.  If possible a "
"method should be added for such objects, which returns a value that is "
"equal.  Otherwise the catch-all method is used, which just returns the "
"argument itself."
msgstr ""
"VALUEは、@code{magit-section}オブジェクトの値です。それ自体がオブジェクトであ"
"る場合、2つのオブジェクトが同じものを表していても等しくない可能性があるため、"
"セクションの識別(identify)に使用するのには適していません。可能であれば、その"
"ようなオブジェクトに等しい値を返すメソッドを追加する必要があります。それ以外"
"の場合は、引数自体を返すだけのcatch-allメソッドが使用されます。"

#. type: defun
#: sed-out/magit-section.texi:217
msgid ""
"Return the section identified by IDENT@.  IDENT has to be a list as returned "
"by @code{magit-section-ident}.  If optional ROOT is non-nil, then search in "
"that section tree instead of in the one whose root @code{magit-root-section} "
"is."
msgstr ""
"IDENT@@で識別されるセクションを返します。 IDENTは、@code{magit-section-ident}"
"によって返されるリストである必要があります。オプションのROOTがnil以外の場合"
"は、rootが@code{magit-root-section}であるセクションツリーではなく、そのセク"
"ションツリーを検索します。"

#. type: defun
#: sed-out/magit-section.texi:219
#, no-wrap
msgid "magit-section-lineage section"
msgstr "magit-section-lineage section"

#. type: defun
#: sed-out/magit-section.texi:222
msgid ""
"Return the lineage of SECTION@.  The return value has the form "
"@code{(TYPE...)}."
msgstr ""
"SECTION@@の系統(lineage)を返します。戻り値の形式は@code{(TYPE...)}です。"

#. type: defun
#: sed-out/magit-section.texi:224
#, no-wrap
msgid "magit-section-content-p section"
msgstr "magit-section-content-p section"

#. type: defun
#: sed-out/magit-section.texi:226
msgid "Return non-nil if SECTION has content or an unused washer function."
msgstr ""
"SECTION にコンテンツまたは未使用のウォッシャー関数がある場合、非 nil を返しま"
"す。"

#. type: Plain text
#: sed-out/magit-section.texi:232
msgid ""
"The next two functions are replacements for the Emacs functions that have "
"the same name except for the @code{magit-} prefix.  Like @code{magit-current-"
"section} they do not act on point, the cursors position, but on the position "
"where the user clicked to invoke the context menu."
msgstr ""
"次の 2 つの関数は、 @code{magit-} プレフィックスを除いて同じ名前を持つ Emacs "
"関数の置き換えです。 @code{magit-current-section} のように、カーソルの位置で"
"はなく、ユーザーがコンテキストメニューを呼び出すためにクリックした位置で動作"
"します。"

#. type: Plain text
#: sed-out/magit-section.texi:237
msgid ""
"If your package provides a context menu and some of its commands act on the "
"\"thing at point\", even if just as a default, then use the prefixed "
"functions to teach them to instead use the click location when appropriate."
msgstr ""
"あなたのパッケージがコンテキストメニューを提供し、そのコマンドの一部がデフォ"
"ルトであっても「ポイントにあるもの」に作用する場合は、接頭辞付きの関数を使用"
"して、必要に応じて代わりにクリック位置を使用するように教えてください。"

#. type: item
#: sed-out/magit-section.texi:239
#, no-wrap
msgid "Function magit-point"
msgstr "Function magit-point"

#. type: table
#: sed-out/magit-section.texi:244
msgid ""
"Return point or the position where the context menu was invoked.  When using "
"the context menu, return the position the user clicked on, provided the "
"current buffer is the buffer in which the click occurred.  Otherwise return "
"the same value as @code{point}."
msgstr ""
"コンテキストメニューが呼び出されたリターンポイントまたは位置。 コンテキストメ"
"ニューを使用する場合、現在のバッファーがクリックが発生したバッファーである場"
"合、ユーザーがクリックした位置を返します。 それ以外の場合は、@code{point} と"
"同じ値を返します。"

#. type: item
#: sed-out/magit-section.texi:245
#, no-wrap
msgid "Function magit-thing-at-point thing &optional no-properties"
msgstr "Function magit-thing-at-point thing &optional no-properties"

#. type: table
#: sed-out/magit-section.texi:251
msgid ""
"Return the THING at point or where the context menu was invoked.  When using "
"the context menu, return the thing the user clicked on, provided the current "
"buffer is the buffer in which the click occurred.  Otherwise return the same "
"value as @code{thing-at-point}.  For the meaning of THING and NO-PROPERTIES "
"see that function."
msgstr ""
"ポイントまたはコンテキストメニューが呼び出された場所でTHINGを返します。 コン"
"テキストメニューを使用する場合、現在のバッファがクリックが発生したバッファで"
"ある場合、ユーザーがクリックしたものを返します。 それ以外の場合は、"
"@code{thing-at-point} と同じ値を返します。 THING と NO-PROPERTIES の意味につ"
"いては、当該の関数を参照してください。"

#. type: defun
#: sed-out/magit-section.texi:256
#, no-wrap
msgid "magit-section-match condition &optional (section (magit-current-section))"
msgstr "magit-section-match condition &optional (section (magit-current-section))"

#. type: defun
#: sed-out/magit-section.texi:258
msgid "Return t if SECTION matches CONDITION@."
msgstr "SECTIONがCONDITION@@と一致する場合は、tを返します。"

#. type: defun
#: sed-out/magit-section.texi:262
msgid ""
"SECTION defaults to the section at point.  If SECTION is not specified and "
"there also is no section at point, then return nil."
msgstr ""
"SECTIONは、デフォルトでポイントのセクションになります。SECTIONが指定されてお"
"らず、ポイントにもセクションがない場合は、nilを返します。"

#. type: itemize
#: sed-out/magit-section.texi:268
msgid "@code{(CONDITION...)} matches if any of the CONDITIONs matches."
msgstr ""
"@code{(CONDITION...)} 条件(CONDITION)のいずれかが一致する場合に一致します。"

#. type: itemize
#: sed-out/magit-section.texi:273
msgid ""
"@code{[CLASS...]} matches if the section's class is the same as the first "
"CLASS or a subclass of that; the section's parent class matches the second "
"CLASS; and so on."
msgstr ""
"@code{[CLASS...]} セクションのクラスが最初のクラス(CLASS)またはそのサブクラス"
"と同じである場合に一致します。 セクションの親クラスは2番目のクラス(CLASS)と一"
"致します。等々。"

#. type: itemize
#: sed-out/magit-section.texi:277
msgid ""
"@code{[* CLASS...]} matches sections that match [CLASS@dots{}] and also "
"recursively all their child sections."
msgstr ""
"@code{[* CLASS...]} [CLASS@dots{}]に一致するセクションと、それらのすべての子"
"セクションを再帰的に一致させます。"

#. type: itemize
#: sed-out/magit-section.texi:281
msgid ""
"@code{CLASS} matches if the section's class is the same as CLASS or a "
"subclass of that; regardless of the classes of the parent sections."
msgstr ""
"@code{CLASS} 親セクションのクラスには関係なく、セクションのクラスがCLASSまた"
"はそのサブクラスと同じである場合に一致します。"

#. type: defmac
#: sed-out/magit-section.texi:316
msgid ""
"Each clause looks like @code{(CONDITION BODY...)}.  The type of the section "
"is compared against each CONDITION; the BODY forms of the first match are "
"evaluated sequentially and the value of the last form is returned.  Inside "
"BODY the symbol @code{it} is bound to the section at point.  If no clause "
"succeeds or if there is no section at point, return nil."
msgstr ""
"各句は@code{(CONDITION BODY...)}のようになります。セクションのタイプは、各条"
"件と比較されます。最初の一致のBODYフォームが順番に評価され、最後のフォームの"
"値が返されます。BODY内では、シンボル@code{it}がポイントのセクションに結び付け"
"られています。句が成功しない場合、またはポイントにセクションがない場合は、nil"
"を返します。"

#. type: defmac
#: sed-out/magit-section.texi:321
msgid ""
"See @code{magit-section-match} for the forms CONDITION can take.  "
"Additionally a CONDITION of t is allowed in the final clause, and matches if "
"no other CONDITION match, even if there is no section at point."
msgstr ""
"CONDITIONが取ることができる形式については→@code{magit-section-match}を参照し"
"てください。 さらに、tの条件(CONDITION)は最後の節で許可され、他の条件"
"(CONDITIO)Nが一致しない場合は、ポイントにセクションがない場合でも一致します。"
