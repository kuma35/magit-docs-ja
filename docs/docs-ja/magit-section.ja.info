This is magit-section.ja.info, produced by .texi2any-real version 7.0.3
from magit-section.ja.texi.

     Copyright (C) 2015-2022 Jonas Bernoulli <jonas@bernoul.li>

     You can redistribute this document and/or modify it under the terms
     of the GNU General Public License as published by the Free Software
     Foundation, either version 3 of the License, or (at your option)
     any later version.

     This document is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     General Public License for more details.

INFO-DIR-SECTION Magit文書翻訳
START-INFO-DIR-ENTRY
* Magit-Section(ja): (magit-section.ja).  あなた独自のパッケージでMagit                                              sectionを使用します。
END-INFO-DIR-ENTRY


File: magit-section.ja.info,  Node: Top,  Next: Introduction,  Up: (dir)

Magit-Section Developer Manual
******************************

このパッケージは、Magitのメインユーザーインターフェイス(バッファを構成す
る折りたたみ可能なセクション)を実装します。このパッケージは、以前は
Magitの一部として配布されていました。しかし今やMagitやGitとは関係のない
他のパッケージでもどのようにすれば使用できるかを示しています。

セクションの抽象化と使用可能なコマンドおよびユーザーオプションの詳細につ
いては→*note (magit)Sections:: このマニュアルでは、あなた独自のパッケー
ジでセクションを使用する方法について説明します。

このマニュアルは、Magit-Sectionバージョン 3.3.0-git を対象としています。

     Copyright (C) 2015-2022 Jonas Bernoulli <jonas@bernoul.li>

     You can redistribute this document and/or modify it under the terms
     of the GNU General Public License as published by the Free Software
     Foundation, either version 3 of the License, or (at your option)
     any later version.

     This document is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     General Public License for more details.

* Menu:

* Introduction::             Introduction
* Creating Sections::        Creating Sections
* Core Functions::           Core Functions
* Matching Functions::       Matching Functions


File: magit-section.ja.info,  Node: Introduction,  Next: Creating Sections,  Prev: Top,  Up: Top

1 Introduction
**************

このパッケージは、Magitのメインユーザーインターフェイス(バッファを構成す
る折りたたみ可能なセクション)を実装します。このパッケージは、以前は
Magitの一部として配布されていました。しかし今やMagitやGitとは関係のない
他のパッケージでもどのようにすれば使用できるかを示しています。

セクションの抽象化と使用可能なコマンドおよびユーザーオプションの詳細につ
いては→*note (magit)Sections:: このマニュアルでは、あなた独自のパッケー
ジでセクションを使用する方法について説明します。

ドキュメントに対処されていないものが残っている場合は、Magitがこのライブ
ラリを広範囲に使用していることを鑑み、助けを求める前にまずはMagit関係の
方で適切な例を検索してください。宜しくお願いします。


File: magit-section.ja.info,  Node: Creating Sections,  Next: Core Functions,  Prev: Introduction,  Up: Top

2 Creating Sections
*******************

 -- Macro: magit-insert-section [name] (type &optional value hide) &rest
          body
     タイプCLASSのセクションオブジェクトを作成し、その‘value’スロットに
     VALUEを格納し、ポイントにセクションを挿入します。 CLASSは
     ‘magit-section’のサブクラスであるか、‘(eval FORM)’の形式です。この
     場合、FORMは実行時に評価され、サブクラスを返す必要があります。 他の
     場所では、セクションクラスはしばしばその「タイプ」と呼ばれます。

     多くのコマンドは、現在のセクションのクラスに応じて動作が異なり、特
     定のクラスのセクションは、‘keymap’クラススロットを使用して指定され
     る独自のキーマップを持つことができます。そのスロットの値は、値がキ
     ーマップである変数である必要があります。

     歴史的な理由から、MagitとForgeはほとんどの場合、実際にはクラスを識
     別せず、適切なパッケージプレフィックスがないシンボルをCLASSとして使
     用します。これは、他のパッケージでは利用できない、文書化されていな
     いその場しのぎ(kludge)が原因で機能します。

     オプションのHIDEがnil以外の場合、デフォルトでセクション本体を折りた
     たみます。つまり、最初にセクションを作成するときですが、バッファを
     更新するときは折りたたみません。 それ以外の場合は、デフォルトで展開
     します。 これは、‘magit-section-set-visibility-hook’を使用して上書
     きできます。更新中にセクションが再作成されると、先行の可視性が継承
     され、HIDEは無視されます（ただし、フックは引き続き尊重されます）。

     BODYは、セクションの見出しと本文を実際に挿入する任意の数のフォーム
     (form)です。オプションのNAMEを指定する場合は、シンボルにする必要が
     あります。シンボルは、挿入されるセクションのオブジェクトに結び付け
     られます。

     BODYが評価される前に、セクションオブジェクトの‘start’が‘point’の値
     に設定され、BODYが評価された後、その‘end’が‘point’の新しい値に設定
     されます。BODYは、‘point’を前進させる責任があります。

     セクションが空であることがBODY内で判明した場合は、
     ‘magit-cancel-section’を使用して、部分的に挿入されたセクションのす
     べてのトレースを中止して削除できます。これは、Gitの出力を洗浄
     (wash)してセクションを作成し、Gitが今回は実際には何も出力しなかった
     場合に発生する可能性があります。

 -- Function: magit-insert-heading &rest args
     現在挿入されているセクションの見出しを挿入します。

     この関数は、‘magit-insert-section’内でのみ使用する必要があります。

     引数なしで呼び出された場合は、挿入されるセクションを表すオブジェク
     トの‘content’スロットを‘point’のマーカーに設定するだけです。この関
     数をこのように使用する場合、セクションには1行のみを含める必要があり
     ます。

     文字列またはnilである必要がある引数ARGSを指定して呼び出された場合は
     、それらの文字列をポイントに挿入します。これが発生する前はセクショ
     ンにテキストを含めないでください。その後、セクションには1行だけを含
     める必要があります。‘face’プロパティがこれらの文字列のいずれかの内
     部のどこかに設定されている場合は、それらすべてを変更せずに挿入しま
     す。それ以外の場合は、挿入されたすべてのテキストに
     ‘magit-section-heading’ faceを使用します。

     セクションオブジェクトの‘content’プロパティは、見出しの終わり
     (‘start’から‘content’まで続く)と本文の始まり(‘content’から‘end’まで
     続く)です。‘content’の値がnilの場合、セクションには見出しがなく、本
     文を折りたたむことはできません。セクションに見出しがある場合、その
     高さは、末尾の改行文字を含めて、正確に1行である必要があります。これ
     は強制されません、あなたはそれを正しくする責任があります。唯一の例
     外は、この関数が必要に応じて改行文字を挿入することです。

 -- Macro: magit-insert-section-body &rest body
     セクションが展開されたら、BODYを使用してセクション本体を挿入します
     。セクションの作成時にセクションが展開されている場合、これは
     ‘progn’のようになります。それ以外の場合、セクションが明示的に展開さ
     れるまで、BODYは評価されません。

 -- Function: magit-cancel-section
     現在挿入されているセクションの挿入をキャンセルします。そのセクショ
     ンのすべての痕跡を削除します。

 -- Function: magit-wash-sequence function
     ‘nil’が返されるか、バッファの終わりに達するまで、FUNCTIONを繰り返し
     呼び出します。FUNCTIONは、ポイントを前方に移動するか、‘nil’を返す必
     要があります。


File: magit-section.ja.info,  Node: Core Functions,  Next: Matching Functions,  Prev: Creating Sections,  Up: Top

3 Core Functions
****************

 -- Function: magit-current-section
     ポイントまたはコンテキストメニューが呼び出された場所のセクションを
     返します。 コンテキストメニューを使用する場合、クリックが発生したバ
     ッファーが現在のバッファーである場合、ユーザーがクリックしたセクシ
     ョンを返します。 それ以外の場合は、ポイントのセクションを返します。

Function magit-section-at &optional position
     POSITION のセクションを返します。デフォルトはポイントです。 コンテ
     キストメニューが使用されている場合でも、デフォルトでポイントします
     。

 -- Function: magit-section-ident section
     SECTION@の一意(unique)の識別子(identifier)を返します。戻り値の形式
     は‘((TYPE . VALUE)...)’です。

 -- Function: magit-section-ident-value value
     VALUE@の定数表現(constant representation)を返します。

     VALUEは、‘magit-section’オブジェクトの値です。それ自体がオブジェク
     トである場合、2つのオブジェクトが同じものを表していても等しくない可
     能性があるため、セクションの識別(identify)に使用するのには適してい
     ません。可能であれば、そのようなオブジェクトに等しい値を返すメソッ
     ドを追加する必要があります。それ以外の場合は、引数自体を返すだけの
     catch-allメソッドが使用されます。

 -- Function: magit-get-section ident &optional root
     IDENT@で識別されるセクションを返します。 IDENTは、
     ‘magit-section-ident’によって返されるリストである必要があります。オ
     プションのROOTがnil以外の場合は、rootが‘magit-root-section’であるセ
     クションツリーではなく、そのセクションツリーを検索します。

 -- Function: magit-section-lineage section
     SECTION@の系統(lineage)を返します。戻り値の形式は‘(TYPE...)’です。

 -- Function: magit-section-content-p section
     SECTION にコンテンツまたは未使用のウォッシャー関数がある場合、非
     nil を返します。

次の 2 つの関数は、 ‘magit-’ プレフィックスを除いて同じ名前を持つ Emacs
関数の置き換えです。 ‘magit-current-section’ のように、カーソルの位置で
はなく、ユーザーがコンテキストメニューを呼び出すためにクリックした位置で
動作します。

あなたのパッケージがコンテキストメニューを提供し、そのコマンドの一部がデ
フォルトであっても「ポイントにあるもの」に作用する場合は、接頭辞付きの関
数を使用して、必要に応じて代わりにクリック位置を使用するように教えてくだ
さい。

Function magit-point
     コンテキストメニューが呼び出されたリターンポイントまたは位置。 コン
     テキストメニューを使用する場合、現在のバッファーがクリックが発生し
     たバッファーである場合、ユーザーがクリックした位置を返します。 それ
     以外の場合は、‘point’ と同じ値を返します。

Function magit-thing-at-point thing &optional no-properties
     ポイントまたはコンテキストメニューが呼び出された場所でTHINGを返しま
     す。 コンテキストメニューを使用する場合、現在のバッファがクリックが
     発生したバッファである場合、ユーザーがクリックしたものを返します。
     それ以外の場合は、‘thing-at-point’ と同じ値を返します。 THING と
     NO-PROPERTIES の意味については、当該の関数を参照してください。


File: magit-section.ja.info,  Node: Matching Functions,  Prev: Core Functions,  Up: Top

4 Matching Functions
********************

 -- Function: magit-section-match condition &optional (section
          (magit-current-section))
     SECTIONがCONDITION@と一致する場合は、tを返します。

     SECTIONは、デフォルトでポイントのセクションになります。SECTIONが指
     定されておらず、ポイントにもセクションがない場合は、nilを返します。

     CONDITIONは、以下の形式をとることができます:

        • ‘(CONDITION...)’ 条件(CONDITION)のいずれかが一致する場合に一致
          します。
        • ‘[CLASS...]’ セクションのクラスが最初のクラス(CLASS)またはその
          サブクラスと同じである場合に一致します。 セクションの親クラス
          は2番目のクラス(CLASS)と一致します。等々。

        • ‘[* CLASS...]’ [CLASS...]に一致するセクションと、それらのすべ
          ての子セクションを再帰的に一致させます。
        • ‘CLASS’ 親セクションのクラスには関係なく、セクションのクラスが
          CLASSまたはそのサブクラスと同じである場合に一致します。

     各CLASSは、‘magit-section’から派生したクラスを識別するクラスシンボ
     ルである必要があります。下位互換性のために、CLASSは「タイプシンボル
     」にすることもできます。‘type’スロットの値が‘eq’の場合、セクション
     はそのようなシンボルに一致します。タイプシンボルの
     ‘magit--section-type-alist’にエントリがある場合、そのクラスがその
     alistのタイプに対応するクラスのサブクラスであれば、セクションもその
     タイプに一致します。

     注意: もちろん、正確にしたい場合を除いて、
     ‘magit-describe-section-briefly’によって出力される完全なセクション
     系統を指定する必要はないことに注意してください。

 -- Function: magit-section-value-if condition &optional section
     ポイントのセクションがCONDITIONと一致する場合は、その値を返します。

     オプションのSECTIONがnil以外の場合は、代わりにそれが一致するかどう
     かをテストします。ポイントにセクションがなく、SECTIONがnilの場合は
     、nilを返します。 セクションが一致しない場合は、nilを返します。

     CONDITIONが取ることができる形式については、‘magit-section-match’を
     参照してください。

 -- Macro: magit-section-case &rest clauses
     ポイントのセクションのタイプに関する条項(clauses)から選択します。

     各句は‘(CONDITION BODY...)’のようになります。セクションのタイプは、
     各条件と比較されます。最初の一致のBODYフォームが順番に評価され、最
     後のフォームの値が返されます。BODY内では、シンボル‘it’がポイントの
     セクションに結び付けられています。句が成功しない場合、またはポイン
     トにセクションがない場合は、nilを返します。

     CONDITIONが取ることができる形式については→‘magit-section-match’を参
     照してください。 さらに、tの条件(CONDITION)は最後の節で許可され、他
     の条件(CONDITIO)Nが一致しない場合は、ポイントにセクションがない場合
     でも一致します。



Tag Table:
Node: Top897
Node: Introduction2570
Node: Creating Sections3674
Node: Core Functions9651
Node: Matching Functions13751

End Tag Table


Local Variables:
coding: utf-8
End:
